
import numpy as np

KEYS = {
'ANALYTICAL_METHOD':str, 
'ANALYTICAL_METHOD_ID':int,
'ANALYTICAL_PROT_DOC_ID':int,
'CAMPAIGN':str,
'CAS_ORG':str,
'CAS_RN':str,
'CHEMBL_ID':str,
'CHEMICAL_DB_ID':int,
'CHEMICAL_ID':int,
'CHEMICAL_ID_FOR_CONC':int,
'CHEMICAL_NAME':str,
'CHEMICAL_NAME_FOR_CONC':str,
'CHEMSPIDER_ID':int,
'COMMENTS':str,
'CONFIDENTIAL':None,
'ENTERED_BY':str,
'ENTERED_DATE':str,
'ENVIRONMENTAL_CON_ID':int,
'ENVIRON_COMPARTMENT':str,
'ENVIRON_COMPARTMENT_ID':int,
'EXTRACTION_METHOD':str,
'EXTRACTION_METHOD_ID':int,
'EXTRACTION_PROT_DOC_ID':int,
'FRACTION':str,
'FRACTION_ID':int,
'FRACTION_PROT_DOC_ID':int,
'IDENTIFIER_STATUS':str,
'LOD_UNIT':str,
'LOD_VALUE':float,
'LOQ_UNIT':str,
'LOQ_VALUE':float,
'MEASURED_CATEGORY':str,
'MEASURED_CATEGORY_ID':int,
'MEASURED_FLAG':str,
'MEASURED_UNIT':str,
'MEASURED_VALUE':float,
'MEASUREMENT_DOC_ID':int,
'MW':float,
'ORGANISATION':str,
'ORG_ENTERED_BY':str,
'ORG_ENTERED_DATE':str,
'PUBCHEM_CID':int,
'RELIABILITY':str,
'RELIABILITY_SCORE':float,
'RELIABILITY_SOURCE':str,
'REVISION_DATE':str,
'SAMPLE_DATE':str,
'SAMPLE_ID_ORG':str,
'SAMPLE_MATRIX':str,
'SAMPLE_MATRIX_ID':int,
'SAMPLE_ORGANISM':str,
'SAMPLE_ORGANISM_GENDER':str,
'SAMPLE_ORGANISM_GENDER_ID':int,
'SAMPLE_ORGANISM_LIFESTAGE':str,
'SAMPLE_ORGANISM_LIFESTAGE_ID':int,
'SAMPLE_ORGANISM_TAX_ID':int,
'SAMPLE_PROT_DOC_ID':int,
'SAMPLE_REMARK':str,
'SAMPLE_SPECIES_GROUP':str,
'SAMPLE_SPECIES_GROUP_TAX_ID':int,
'SAMPLE_TISSUE':str,
'SAMPLE_TISSUE_BRENDA_ID':str,
'SAMPLING_DEPTH_UNIT':str,
'SAMPLING_DEPTH_VALUE':float,
'SAMPLING_DURATION_UNIT':str,
'SAMPLING_DURATION_VALUE':float,
'SAMPLING_METHOD':str,
'SAMPLING_METHOD_ID':int,
'SAMPLING_REMARK':str,
'SITE_CODE':str,
'SITE_ID':int,
'STATUS':str,
'STRESSOR_TYPE':str,
'STRESSOR_TYPE_ID':int,
'SUBSAMPLE':int, #one loc, one time, multiple samples
'SUBSTANCE_ORG':str,
'SUBSTANCE_ORG_ID':int ,
'CAS':str,
'CAS_NODASH':int,
'INCHIKEY_STANDARD':str
}


#convert to standard SI units, kg, m^3 etc. ug/kg/ABS 380 nm -> 1/m
UNITS = {'ug/kg':1e-9,
         '-1':1,
         'mg/kg':1e-6, 
         'ng/L':1e-6, 
         'ug/L':1e-3, 
         'mg/L':1,
         'ug/kg/ABS 380 nm':0.00263157895, 
         'ug/kg':1e-9,
         '%':0.01,
         'ug/g':1e-6,
         'cm':1e-2, 
         'mM':1e-3, 
         'mg/g':1e-3, 
         'g':1e-3, 
         'deg C':1, 
         'psu':1,
         'ug/l':1e-3,
         'Âµg/L':1e-3
         }

# to seconds
hour = 1
minute = hour/60
second = minute/60
day = 24*hour

time_units = {'BLM':-1, 
              'NC':-1, 
              'NR':-1, 
              'ZGS':-1, 
              'ant':-1, 
              'b0.25':-1, 
              'brd':-1, 
              'brs':-1, 
              'bt':-1, 
              'cd':-1, 
              'cfs':-1, 
              'crs':-1, 
              'cs':-1, 
              'd':day, 
              'dapu':day, 
              'dd':day, 
              'dpe':day, 
              'dpel':day, 
              'dpf':day, 
              'dpfl':day, 
              'dpgm':day, 
              'dph':day, 
              'dphv':day, 
              'dpn':day, 
              'dpp':day, 
              'dpys':day, 
              'ea':-1, 
              'ej':-1, 
              'el':-1, 
              'em':-1, 
              'ep':-1, 
              'f5':-1, 
              'fb':-1, 
              'fi':-1, 
              'fl':-1, 
              'fr':-1, 
              'frt':-1, 
              'fs':-1, 
              'gds':-1, 
              'ge':-1, 
              'ges':-1, 
              'gm':-1, 
              'go':-1, 
              'gs':-1, 
              'h':hour, 
              'hbf':hour, 
              'hpe':hour, 
              'hpel':hour, 
              'hpf':hour, 
              'hph':hour, 
              'ht':-1, 
              'hv':-1, 
              'ins':-1, 
              'inst':1, 
              'lf':-1, 
              'lhv15-20':-1, 
              'lhv20-25':-1, 
              'ls':-1,
              'lva':-1, 
              'lvp':-1, 
              'lvsa':-1, 
              'ma':-1, 
              'mi':minute, 
              'mmph':-1, 
              'mo':30*day, 
              'mopf':30*day, 
              'moph':30*day, 
              'mopm':30*day, 
              'mpf':minute, 
              'nan':-1, 
              'nf':-1, 
              'pa':-1, 
              'pgm':-1, 
              'rhv3':-1,
              's':1,
              'stg':-1, 
              'vg':-1, 
              'wk':7*day, 
              'wkpm':7*day, 
              'wpe':7*day, 
              'wph':7*day, 
              'wpp':7*day, 
              'yr':365*day
              }



def get_types():
    np.save('types.npy', KEYS)

def get_units():
    np.save('units.npy', UNITS)

def get_time_units():
    return time_units
    
def load_dict(filename):
    return np.load(filename).item()
